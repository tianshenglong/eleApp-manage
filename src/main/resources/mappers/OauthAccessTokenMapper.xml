<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eleapp.dao.OauthAccessTokenMapper" >
  <resultMap id="BaseResultMap" type="com.eleapp.model.OauthAccessToken" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="app_id" property="app_id" jdbcType="VARCHAR" />
    <result column="access_token" property="access_token" jdbcType="VARCHAR" />
    <result column="user_code" property="user_code" jdbcType="VARCHAR" />
    <result column="open_id" property="open_id" jdbcType="VARCHAR" />
    <result column="create_date" property="create_date" jdbcType="TIMESTAMP" />
    <result column="refresh_date" property="refresh_date" jdbcType="TIMESTAMP" />
    <result column="expires_in" property="expires_in" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, app_id, access_token, user_code, open_id, date_format(create_date,'%Y-%m-%d %H:%i:%s')create_date, date_format(refresh_date,'%Y-%m-%d %H:%i:%s')refresh_date, expires_in,
    if(status=0,'禁用','生效') status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from oauth_access_token
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from oauth_access_token
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.eleapp.model.OauthAccessToken" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into oauth_access_token (id, app_id, access_token, 
      user_code, open_id, create_date, 
      refresh_date, expires_in, status
      )
    values (#{id,jdbcType=INTEGER}, #{app_id,jdbcType=VARCHAR}, #{access_token,jdbcType=VARCHAR}, 
      #{user_code,jdbcType=VARCHAR}, #{open_id,jdbcType=VARCHAR}, #{create_date,jdbcType=TIMESTAMP}, 
      #{refresh_date,jdbcType=TIMESTAMP}, #{expires_in,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.eleapp.model.OauthAccessToken" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into oauth_access_token
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="app_id != null" >
        app_id,
      </if>
      <if test="access_token != null" >
        access_token,
      </if>
      <if test="user_code != null" >
        user_code,
      </if>
      <if test="open_id != null" >
        open_id,
      </if>
      <if test="create_date != null" >
        create_date,
      </if>
      <if test="refresh_date != null" >
        refresh_date,
      </if>
      <if test="expires_in != null" >
        expires_in,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="app_id != null" >
        #{app_id,jdbcType=VARCHAR},
      </if>
      <if test="access_token != null" >
        #{access_token,jdbcType=VARCHAR},
      </if>
      <if test="user_code != null" >
        #{user_code,jdbcType=VARCHAR},
      </if>
      <if test="open_id != null" >
        #{open_id,jdbcType=VARCHAR},
      </if>
      <if test="create_date != null" >
        #{create_date,jdbcType=TIMESTAMP},
      </if>
      <if test="refresh_date != null" >
        #{refresh_date,jdbcType=TIMESTAMP},
      </if>
      <if test="expires_in != null" >
        #{expires_in,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.eleapp.model.OauthAccessToken" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update oauth_access_token
    <set >
      <if test="app_id != null" >
        app_id = #{app_id,jdbcType=VARCHAR},
      </if>
      <if test="access_token != null" >
        access_token = #{access_token,jdbcType=VARCHAR},
      </if>
      <if test="user_code != null" >
        user_code = #{user_code,jdbcType=VARCHAR},
      </if>
      <if test="open_id != null" >
        open_id = #{open_id,jdbcType=VARCHAR},
      </if>
      <if test="create_date != null" >
        create_date = #{create_date,jdbcType=TIMESTAMP},
      </if>
      <if test="refresh_date != null" >
        refresh_date = #{refresh_date,jdbcType=TIMESTAMP},
      </if>
      <if test="expires_in != null" >
        expires_in = #{expires_in,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eleapp.model.OauthAccessToken" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update oauth_access_token
    set app_id = #{app_id,jdbcType=VARCHAR},
      access_token = #{access_token,jdbcType=VARCHAR},
      user_code = #{user_code,jdbcType=VARCHAR},
      open_id = #{open_id,jdbcType=VARCHAR},
      create_date = #{create_date,jdbcType=TIMESTAMP},
      refresh_date = #{refresh_date,jdbcType=TIMESTAMP},
      expires_in = #{expires_in,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--根据条件获取app列表-->
  <select id="selectAllOauthAccessList" resultType="map">
    select <include refid="Base_Column_List" />
    from oauth_access_token where 1=1
  </select>

  <update id="updateOauthStatus">
    update oauth_access_token set status = #{status}  where id = #{id}
  </update>
</mapper>